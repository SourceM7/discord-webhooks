name: Send Random Quran Verses

on:
  schedule:
    # Morning: 8:00 AM UTC (adjust timezone as needed)
    - cron: '0 8 * * *'
    # Night: 10:00 PM UTC (adjust timezone as needed)
    - cron: '0 22 * * *'
  workflow_dispatch:

env:
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

jobs:
  send-verses:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: |
          sudo apt-get install -y jq --no-install-recommends

      - name: Fetch verses, build embed and send
        shell: bash
        run: |
          set -euo pipefail

          # Pick a random surah and starting ayah
          random_surah=$(( RANDOM % 114 + 1 ))  # 1-114 surahs
          
          # Get surah info to check total verses
          surah_info_json=$(curl -s "https://api.alquran.cloud/v1/surah/${random_surah}")
          total_ayahs_in_surah=$(echo "$surah_info_json" | jq -r '.data.numberOfAyahs')
          surah_name_ar=$(echo "$surah_info_json" | jq -r '.data.name')
          surah_name_en=$(echo "$surah_info_json" | jq -r '.data.englishName')
          
          # Pick a random starting ayah, ensuring we have room for 3-5 verses
          num_verses=$(( RANDOM % 3 + 3 ))  # Random between 3-5 verses (shorter for Discord limits)
          max_start_ayah=$(( total_ayahs_in_surah - num_verses + 1 ))
          if [ $max_start_ayah -lt 1 ]; then
            max_start_ayah=1
            num_verses=$total_ayahs_in_surah
          fi
          start_ayah=$(( RANDOM % max_start_ayah + 1 ))
          
          echo "Selected Surah $random_surah ($surah_name_en), ayahs $start_ayah to $(( start_ayah + num_verses - 1 ))"
          
          verses_content=""
          arabic_audio_files=()
          arabic_image_files=()
          
          for i in $(seq 0 $(( num_verses - 1 ))); do
            current_ayah=$(( start_ayah + i ))
            
            echo "Fetching Surah $random_surah, Ayah $current_ayah..."
            
            # Get all data using global verse number approach
            # First get the global verse number for this surah:ayah
            surah_data=$(curl -s "https://api.alquran.cloud/v1/surah/${random_surah}")
            
            # Calculate global verse number
            if [ $i -eq 0 ]; then
              # Get the first ayah's global number
              first_ayah_global=$(echo "$surah_data" | jq -r ".data.ayahs[$(( current_ayah - 1 ))].number")
              global_verse_start=$first_ayah_global
            fi
            global_verse_number=$(( global_verse_start + i ))
            
            echo "Global verse number: $global_verse_number"
            
            # Get Arabic verse, tafseer, and English using global verse number
            arabic_verse_json=$(curl -s "https://api.alquran.cloud/v1/ayah/${global_verse_number}/ar.alafasy")
            tafseer_json=$(curl -s "https://api.alquran.cloud/v1/ayah/${global_verse_number}/ar.muyassar")
            english_json=$(curl -s "https://api.alquran.cloud/v1/ayah/${global_verse_number}/en.asad")

            verse_text=$(echo "$arabic_verse_json" | jq -r '.data.text')
            tafseer_text=$(echo "$tafseer_json" | jq -r '.data.text')
            english_text=$(echo "$english_json" | jq -r '.data.text')
            audio_url=$(echo "$arabic_verse_json" | jq -r '.data.audio')

            echo "Verse text: ${verse_text:0:50}..."
            echo "Tafseer: ${tafseer_text:0:50}..."

            # Add verse content to collection (shortened for Discord limits)
            verse_display_num=$(( i + 1 ))
            if [ $i -eq 0 ]; then
              verses_content="**${verse_display_num}.** ﴿ **${verse_text}** ﴾\n**التفسير:** ${tafseer_text}\n**English:** ${english_text}"
            else
              verses_content="${verses_content}\n\n**${verse_display_num}.** ﴿ **${verse_text}** ﴾\n**التفسير:** ${tafseer_text}\n**English:** ${english_text}"
            fi

            # Download image and audio for first verse only
            if [ $i -eq 0 ]; then
              img_url="https://cdn.islamic.network/quran/images/high-resolution/${random_surah}_${current_ayah}.png"
              img_file="ayah_${random_surah}_${current_ayah}.png"

              curl -s -o "$img_file" "$img_url"
              arabic_image_files+=("$img_file")

              safe_surah=$(echo "$surah_name_ar" | tr ' ' _)
              audio_file="${safe_surah}_${current_ayah}.mp3"
              curl -s -o "$audio_file" "$audio_url"
              arabic_audio_files+=("$audio_file")
            fi

            # Small delay to avoid overwhelming the API
            sleep 1
          done

          # Get surah name for the title
          surah_name_ar=$(echo "$surah_info_json" | jq -r '.data.name')
          surah_name_en=$(echo "$surah_info_json" | jq -r '.data.englishName')

          # Determine time of day for title
          current_hour=$(date -u +%H)
          if [ $current_hour -lt 12 ]; then
            time_greeting="🌅 Daily Quran"
          else
            time_greeting="🌙 Daily Quran"
          fi

          # Create comprehensive payload with surah context
          payload=$(jq -n \
            --arg content "$verses_content" \
            --arg title "$time_greeting" \
            --arg surah_ar "$surah_name_ar" \
            --arg surah_en "$surah_name_en" \
            --arg start_ayah "$start_ayah" \
            --arg end_ayah "$(( start_ayah + num_verses - 1 ))" \
            '{
              embeds: [
                {
                  title: $title,
                  description: $content,
                  color: 36864,
                  footer: {
                    text: ($surah_ar + " (" + $surah_en + ") - Verses " + $start_ayah + "-" + $end_ayah)
                  },
                  timestamp: (now | strftime("%Y-%m-%dT%H:%M:%SZ"))
                }
              ]
            }')

          echo "Payload size: $(echo "$payload" | wc -c) characters"

          # Send the comprehensive message with attachments from first verse
          if [ ${#arabic_audio_files[@]} -gt 0 ] && [ ${#arabic_image_files[@]} -gt 0 ]; then
            curl --fail -X POST "$DISCORD_WEBHOOK_URL" \
                 -F "payload_json=$payload" \
                 -F "file1=@${arabic_audio_files[0]}" \
                 -F "file2=@${arabic_image_files[0]}"
          else
            curl --fail -X POST "$DISCORD_WEBHOOK_URL" \
                 -H "Content-Type: application/json" \
                 -d "$payload"
          fi

          # Clean up files
          rm -f *.png *.mp3
