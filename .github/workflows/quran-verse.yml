name: Daily Quran Verse Sender

on:
  schedule:
    - cron: '0 8,20 * * *'
  workflow_dispatch:

env:
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

jobs:
  send-surah:
    runs-on: ubuntu-latest

    steps:
      - name: Install ImageMagick & jq
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick jq

      - name: Fetch Surah and Send to Discord
        shell: bash
        run: |
          set -euo pipefail

          # 1. GET A RANDOM SURAH
          surah_number=$(( RANDOM % 114 + 1 ))

          # 2. FETCH SURAH DATA
          arabic_surah_json=$(curl -s "http://api.alquran.cloud/v1/surah/${surah_number}/ar.alafasy")
          tafseer_surah_json=$(curl -s "http://api.alquran.cloud/v1/surah/${surah_number}/ar.muyassar")
          english_surah_json=$(curl -s "http://api.alquran.cloud/v1/surah/${surah_number}/en.asad")

          # 3. EXTRACT SURAH-LEVEL DETAILS
          surah_name_ar=$(echo "$arabic_surah_json" | jq -r '.data.name')
          surah_name_en=$(echo "$english_surah_json" | jq -r '.data.englishName')
          number_of_ayahs=$(echo "$arabic_surah_json" | jq -r '.data.numberOfAyahs')

          # 4. LOOP THROUGH EACH VERSE
          for (( i=0; i<$number_of_ayahs; i++ ))
          do
            verse_text=$(echo "$arabic_surah_json" | jq -r ".data.ayahs[$i].text")
            ayah_in_surah=$(echo "$arabic_surah_json" | jq -r ".data.ayahs[$i].numberInSurah")
            audio_url=$(echo "$arabic_surah_json" | jq -r ".data.ayahs[$i].audio")
            tafseer_text=$(echo "$tafseer_surah_json" | jq -r ".data.ayahs[$i].text")
            english_text=$(echo "$english_surah_json" | jq -r ".data.ayahs[$i].text")
            english_tafseer_json=$(curl -s "https://cdn.jsdelivr.net/gh/spa5k/tafsir_api@main/tafsir/en-al-jalalayn/${surah_number}/${ayah_in_surah}.json")
            english_tafseer_text=$(echo "$english_tafseer_json" | jq -r '.text // "No English commentary available"')

            # Prepare files
            img_url="https://cdn.islamic.network/quran/images/high-resolution/${surah_number}_${ayah_in_surah}.png"
            img_raw="ayah.png"
            img_white="ayah_white.png"
            curl -s -o "$img_raw" "$img_url"
            convert "$img_raw" -background white -alpha remove -alpha off "$img_white"
            audio_file="recitation.mp3"
            curl -s -o "$audio_file" "$audio_url"

            # 5. BUILD AND SEND ARABIC PAYLOAD (Using Heredoc for safety, though less critical here)
            arabic_payload=$(jq -n \
              --arg verse   "$verse_text" \
              --arg tafseer "$tafseer_text" \
              --arg surahA  "$surah_name_ar" \
              --arg ayahN   "$ayah_in_surah" \
              '{
                "embeds": [
                  {
                    "description": ("﴿ " + $verse + " ﴾\n\n**التفسير الميسر**\n" + $tafseer),
                    "color": 36864,
                    "footer": { "text": ($surahA + "، الآية " + $ayahN) }
                  }
                ]
              }')

            curl --fail -X POST "$DISCORD_WEBHOOK_URL" \
                 -F "payload_json=$arabic_payload" \
                 -F "file1=@${audio_file}" \
                 -F "file2=@${img_white}"

            # 6. BUILD AND SEND ENGLISH PAYLOAD (FIXED: Using Heredoc)
            english_payload=$(jq -n \
              --arg eng     "$english_text" \
              --arg eng_tafseer "$english_tafseer_text" \
              --arg surahE  "$surah_name_en" \
              --arg ayahN   "$ayah_in_surah" \
              --rawfile /dev/null <<'EOF'
              {
                "embeds": [
                  {
                    "description": ($eng + "\n\n**Commentary (Al-Jalalayn)**\n" + $eng_tafseer),
                    "color": 36864,
                    "footer": { "text": ($surahE + ", Verse " + $ayahN) }
                  }
                ]
              }
          EOF
            )

            curl --fail -X POST "$DISCORD_WEBHOOK_URL" \
                 -H "Content-Type: application/json" \
                 -d "$english_payload"
            
            # Add delay to avoid Discord rate limits
            sleep 2
          done

          # 7. CLEAN UP FILES
          rm -f ayah.png ayah_white.png recitation.mp3
